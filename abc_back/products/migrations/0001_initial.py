# Generated by Django 5.1.2 on 2024-11-27 11:13

import abc_back.products.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_published', models.BooleanField(default=False, verbose_name='опубликован')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Короткое название для URL', max_length=255, unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=24, unique=True, verbose_name='Цвет')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='SubProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=abc_back.products.models.sub_product_image_upload_to, verbose_name='Изображение')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Основное изображение')),
            ],
            options={
                'verbose_name': 'Изображение подпродукта',
                'verbose_name_plural': 'Изображения подпродуктов',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_published', models.BooleanField(default=False, verbose_name='опубликован')),
                ('is_featured', models.BooleanField(default=False, help_text='При выборе данной опции, категория будет отображаться на главном меню', verbose_name='Главная категория')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Короткое название для URL', max_length=255, unique=True, verbose_name='Слаг')),
                ('parent', models.ForeignKey(blank=True, help_text='Если категория является подкатегорией, выберите родительскую категорию', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', related_query_name='child', to='products.category', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('is_published', models.BooleanField(default=False, verbose_name='опубликован')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Короткое название для URL', max_length=255, unique=True, verbose_name='Слаг')),
                ('poster', models.FileField(blank=True, null=True, upload_to=abc_back.products.models.product_image_upload_to, verbose_name='Постер')),
                ('is_novelty', models.BooleanField(default=False, help_text='Товар является новинкой', verbose_name='Новинка')),
                ('is_bestseller', models.BooleanField(default=False, help_text='Товар является бестселлером', verbose_name='Бестселлер')),
                ('is_back_in_stock', models.BooleanField(default=False, help_text='Товар вернулся в наличии', verbose_name='В наличии')),
                ('is_recommendation', models.BooleanField(default=False, help_text='Товар является рекомендацией магазина', verbose_name='Рекомендация')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('use', models.TextField(blank=True, null=True, verbose_name='Применение/Использование')),
                ('ingredient', models.TextField(blank=True, null=True, verbose_name='Состав')),
                ('additional', models.TextField(blank=True, null=True, verbose_name='Дополнение')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
                ('category', models.ManyToManyField(related_name='products', related_query_name='product', to='products.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('th', 'Штук'), ('ml', 'Миллилитр'), ('l', 'Литр'), ('gr', 'Грамм'), ('kg', 'Килограмм')], max_length=24, verbose_name='Тип')),
                ('value', models.PositiveIntegerField(verbose_name='Значение')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
                'unique_together': {('kind', 'value')},
            },
        ),
        migrations.CreateModel(
            name='SubProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('is_published', models.BooleanField(default=False, verbose_name='опубликован')),
                ('slug', models.SlugField(help_text='Короткое название для URL', max_length=255, unique=True, verbose_name='Слаг')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='В наличии')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен для продажи')),
                ('article', models.PositiveIntegerField(unique=True, verbose_name='Артикул')),
                ('sell_price', models.FloatField(default=0, verbose_name='Цена продажи')),
                ('purchase_price', models.FloatField(default=0, verbose_name='Цена закупки')),
                ('sale_percent', models.PositiveIntegerField(default=0, verbose_name='Процент скидки')),
                ('final_price', models.FloatField(default=0, verbose_name='Цена продажи')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='Дата производства')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Срок годности')),
                ('shelf_life', models.PositiveIntegerField(blank=True, null=True, verbose_name='Срок хранения')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_products', related_query_name='sub_product', to='products.color', verbose_name='Цвет')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sub_products', related_query_name='sub_product', to='products.product', verbose_name='Товар')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_products', related_query_name='sub_product', to='products.size', verbose_name='Размер')),
                ('posters', models.ManyToManyField(blank=True, related_name='sub_products', related_query_name='sub_product', to='products.subproductimage', verbose_name='Изображение подпродукта')),
            ],
            options={
                'verbose_name': 'Подтовар',
                'verbose_name_plural': 'Подтовары',
            },
        ),
    ]
